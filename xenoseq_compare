#!/bin/bash

### This runs a little local blastn to check how much of the unique sequences are fished out

fullquery=$1    # Fullqeury = fished out by xenoseq
num_contigs_assembled=$(grep -c '>' $fullquery)
minlen=500
awk -v RS=">" -v len="$minlen" -v FS="\n" '{for(i=2;i<NF;i++) {l+=length($i)}; if(l>len) printf ">%s", $0} l=0' $fullquery | sed 's, ,_,g' > $fullquery.long
cp $fullquery.long $fullquery
rm $fullquery.long
query=$fullquery
num_hq_contigs_assembled=$(grep -c '>' $query)

subject=$2  # Subject = de facto unique sequences
dir=$(dirname $query)
cp $subject $dir/intermediate_files
subject=${dir}/intermediate_files/$(basename $subject)

if [ "$#" -ne 2 ]; then
    echo 'usage: compare_contigs.py <query> <subject>'
    exit 0
fi


#echo "[xenoseq_comp    $(date +%d-%m_%H:%M:%S)] Building blast database for subject file $subject"
makeblastdb -in $subject -dbtype nucl > /dev/null
#echo "[xenoseq_comp $(date +%d-%m_%H:%M:%S)] Blasting query $query against database"
echo -e 'query\tsubject\tpercid\tlen\tmismatch\tgapopen\tqstart\tqend\tsstart\tsend\tevalue\tbitscore' > ${dir}/'xenoseq_compare.csv'

blastn -query $query -db $subject -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qseq sseq" >> ${dir}/'xenoseq_compare.csv'

num_uniq_defacto=$(grep -c '>' $subject)
tot_uniq_nt=$(grep -v '>' $subject | wc | awk '{print $3-$1}')
tot_uniq_return=$(tail -n +2 ${dir}/xenoseq_compare.csv | awk -F "\t" '{ sum += $4; n++ } END { if (n > 0) print sum ; }')
num_contigs_hit=$(tail ${dir}/xenoseq_compare.csv -n +2 | cut -d$'\t' -f1 | sort | uniq | wc -l)

mge_coverage=$(tail -n +2 ${dir}/xenoseq_compare.csv | awk -F "\t" '{print $4/$14}' | awk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }')
nt_retrieved=$(echo "scale=5 ; ($tot_uniq_return/$tot_uniq_nt)" | bc)
tp=$num_contigs_hit
fp=$(echo "scale=5 ; ($num_hq_contigs_assembled-$num_contigs_hit)" | bc)
fn=$(echo "scale=5 ; ($num_uniq_defacto-$num_contigs_hit)" | bc)
frac=$(echo "scale=5 ; $tp/($num_uniq_defacto)" | bc)
 
if (( $(echo "$frac > 1.0" |bc -l) )); then
	frac=1
fi
if (( $(echo "$nt_retrieved > 1.0" |bc -l) )); then
	nt_retrieved=1
fi
tpr=0.0
fpr=0.0
if [[ $num_hq_contigs_assembled > 0 ]]; then 
	tpr=$(echo "scale=5 ; $tp/($num_hq_contigs_assembled)" | bc)
	fpr=$(echo "scale=5 ; $fp/($num_hq_contigs_assembled)" | bc)
fi
fnr=$(echo "scale=5 ; $fn/($tp+$fn)" | bc)

echo -e "Num_uniq_hidden\tTotal_contigs\tTotal_contigs_hq\tTrue_positives\tFalse_positives\tFraction_uniq_nts_retrieved\tNT_coverage_hit_mges\tFraction_uniq_seqs_retrieved"
echo -e "${num_uniq_defacto}\t$num_contigs_assembled\t$num_hq_contigs_assembled\t${num_contigs_hit}\t$fp\t$nt_retrieved\t$mge_coverage\t$frac"
